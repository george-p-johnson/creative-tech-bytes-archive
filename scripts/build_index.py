#!/usr/bin/env python3
"""
Builds the landing page (index.html) by scanning for edition files
named like "NN.0.html" and generating a simple card grid linking to each.

Usage:
  python3 scripts/build_index.py
"""

from __future__ import annotations

import os
import re
from pathlib import Path

ROOT = Path(__file__).resolve().parents[1]


def find_editions(root: Path) -> list[tuple[int, str]]:
    pattern = re.compile(r"^(\d+)\.0\.html$")
    editions: list[tuple[int, str]] = []
    for name in os.listdir(root):
        m = pattern.match(name)
        if m:
            n = int(m.group(1))
            editions.append((n, name))
    # Sort by numeric part desc (latest first)
    editions.sort(key=lambda t: t[0], reverse=True)
    return editions


def build_cards(editions: list[tuple[int, str]]) -> str:
    parts = []
    for num, filename in editions:
        parts.append(
            f"""
    <div class=\"card\">\n        <a href=\"{filename}\">\n            <h2>{num}.0</h2>\n        </a>\n    </div>""".strip()
        )
    return "\n\n    " + "\n\n    ".join(parts) + "\n"


def build_index(cards_html: str) -> str:
    # Keep styling/layout close to the current hand-authored index.html
    return f"""
<!DOCTYPE html>
<html lang=\"en\">
<head>
  <meta charset=\"UTF-8\">
  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
  <title>GPJ Creative Archive</title>
  <style>
    body{{
        background-color: black;
    }}

    .grid-container {{
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 10px;
        padding: 10px;
    }}
    .card {{
        background: #f3f3f3;
        border: 1px solid #ddd;
        font-family: \"Poppins\",-apple-system,\"BlinkMacSystemFont\",\"Segoe UI\",\"Roboto\",\"Helvetica Neue\",\"Arial\",\"Noto Sans\",\"Liberation Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";
        padding: 15px;
        border-radius: .5rem;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        text-align: center;
    }}
    .card a {{
        text-decoration: none;
        color: black;
    }}
    @media (max-width: 600px) {{
      .grid-container {{
        grid-template-columns: 1fr;
        padding: 10px;
      }}
      .card {{
          margin: 0 0 10px 0;
      }}
    }}

    .logo-container {{
        text-align: center;
        margin-top: 40px;
        margin-bottom: 20px;
    }}
    .logo-container img {{
        max-width: 350px;
        height: auto;
    }}

    .title-container {{
        color: #68f5b2;
        text-align: center;
        font-family: \"Poppins\",-apple-system,\"BlinkMacSystemFont\",\"Segoe UI\",\"Roboto\",\"Helvetica Neue\",\"Arial\",\"Noto Sans\",\"Liberation Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";
    }}
  </style>
  <!-- Autogenerated by scripts/build_index.py. Do not edit by hand. -->
  <meta name=\"robots\" content=\"index,follow\">
  <meta name=\"description\" content=\"Creative Tech Bytes Archive\">
  <link rel=\"icon\" href=\"img/gpj-logo-tech-byte-email.png\">
</head>
<body>
  <div class=\"logo-container\"><img src=\"img/gpj-logo-tech-byte-email.png\" alt=\"Logo\"></div>
  <div class=\"title-container\"><h1>Creative Tech Bytes Archive</h1></div>

  <div class=\"grid-container\">
    {cards_html}
  </div>
</body>
</html>
"""


def main() -> None:
    editions = find_editions(ROOT)
    cards = build_cards(editions)
    html = build_index(cards)
    (ROOT / "index.html").write_text(html, encoding="utf-8")
    print(f"Generated index.html with {len(editions)} editions.")


if __name__ == "__main__":
    main()

